{
	"info": {
		"_postman_id": "f17c84e7-60a0-4a08-9349-9e6437b9f317",
		"name": "MSG.LIFE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11367042"
	},
	"item": [
		{
			"name": "http://localhost:8080/mortality/",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"pais\": \"PT\",\r\n\"txFeminino\": 3.10,\r\n\"txMasculino\": 4.20,\r\n\"ano\": 2016\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/mortality/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"mortality",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/mortality/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response body has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.include.all.keys(\"id\", \"pais\", \"txFeminino\", \"txMasculino\", \"ano\", \"populacaoMasculina\", \"populacaoFeminina\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"pais\": \"PT\",\r\n\"txFeminino\": 3.11230,\r\n\"txMasculino\": 4.20,\r\n\"ano\": 2016\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/mortality/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"mortality",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/mortality/2017",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response body has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"  \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"  \r",
							"    responseData.forEach(function(item) {\r",
							"        pm.expect(item).to.have.property('id');\r",
							"        pm.expect(item).to.have.property('pais');\r",
							"        pm.expect(item).to.have.property('txFeminino');\r",
							"        pm.expect(item).to.have.property('txMasculino');\r",
							"        pm.expect(item).to.have.property('ano');\r",
							"        pm.expect(item).to.have.property('populacaoMasculina');\r",
							"        pm.expect(item).to.have.property('populacaoFeminina');\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"TxFeminino and TxMasculino are non-negative integers\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    responseData.forEach(function(data) {\r",
							"        pm.expect(data.txFeminino).to.be.a('number').and.to.be.at.least(0);\r",
							"        pm.expect(data.txMasculino).to.be.a('number').and.to.be.at.least(0);\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/mortality/2017",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"mortality",
						"2017"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/mortality/upload/2016",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"try {\r",
							"    const response = await pm.sendRequest({\r",
							"        url: \"https://postman-echo.com/get\",\r",
							"        method: \"GET\"\r",
							"    });\r",
							"\r",
							"    console.log(response.json());\r",
							"} catch (err) {\r",
							"    console.error(err);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is not null\", function () {\r",
							"    const responseData = pm.response.text();\r",
							"    pm.expect(responseData).not.equal(null);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/E:/Cloud/GoogleDrive/CV's/msg.life/app/mortalidade.csv"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8080/mortality/upload/2016",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"mortality",
						"upload",
						"2016"
					]
				}
			},
			"response": []
		}
	]
}